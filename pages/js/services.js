// Generated by LiveScript 1.2.0
var values, askServices, ref;
values = require('prelude-ls').values;
askServices = angular.module('askServices', ['firebase']);
ref = new Firebase('https://askkkkk.firebaseio.com/');
askServices.factory('candidateService', [
  '$firebase', function($firebase){
    var service;
    return service = $firebase(ref.child('candidates'));
  }
]);
askServices.factory('questionService', [
  '$firebase', function($firebase){
    var service;
    service = $firebase(ref.child('questions'));
    service.post = function(arg$){
      var title, content, category, addressing, post_date, deadline;
      title = arg$.title, content = arg$.content, category = arg$.category, addressing = arg$.addressing, post_date = arg$.post_date, deadline = arg$.deadline;
      return service.$add({
        title: title,
        content: content,
        category: category,
        addressing: addressing,
        post_date: post_date,
        deadline: deadline,
        state: 'open',
        vote: {
          length: 0
        },
        signature: {
          length: 0
        }
      }).then(function(postRef){
        (function(metaRef){
          metaRef.$child("open/" + postRef.name()).$set(true);
        }.call(this, $firebase(ref.child('question_index'))));
        (function(metaRef){
          var i$, ref$, len$, c;
          for (i$ = 0, len$ = (ref$ = category).length; i$ < len$; ++i$) {
            c = ref$[i$];
            metaRef.$child(c + "/" + postRef.name()).$set(true);
          }
        }.call(this, $firebase(ref.child('category'))));
        return (function(metaRef){
          var i$, ref$, len$, c, results$ = [];
          for (i$ = 0, len$ = (ref$ = addressing).length; i$ < len$; ++i$) {
            c = ref$[i$];
            results$.push(metaRef.$child(c + "/questions/" + postRef.name()).$set(true));
          }
          return results$;
        }.call(this, $firebase(ref.child('candidate_meta'))));
      });
    };
    service.get = function(id){
      var postRef;
      postRef = service.$child(id);
      postRef.$on('loaded', function(snap){
        var c;
        return postRef.addressing = (function(){
          var i$, ref$, len$, results$ = [];
          for (i$ = 0, len$ = (ref$ = postRef.addressing).length; i$ < len$; ++i$) {
            c = ref$[i$];
            results$.push($firebase(ref.child("candidates/" + c)));
          }
          return results$;
        }());
      });
      return postRef;
    };
    return service;
  }
]);
/**
 * Filter an object to an array of its keys (properties) except those given be AngularFire.
 */
askServices.filter('toKeys', function(){
  return function(input, attributes){
    if (!angular.isObject(input)) {
      return input;
    }
    return keys(input).filter(function(it){
      return it[0] !== '$';
    });
  };
});