// Generated by LiveScript 1.2.0
var assert, ref$, ask, firebase, newPetition;
assert = require('assert');
ref$ = require('./askkk'), ask = ref$.ask, firebase = ref$.firebase;
newPetition = function(onComplete){
  return ask.createPetition({
    title: 'hello, world!',
    story: 'Let us all say hello!',
    candidates: {
      1: true,
      2: true
    }
  }, function(data){
    return onComplete(data.id);
  });
};
describe('Signature', function(){
  return describe('sign', function(){
    var x$;
    x$ = it;
    x$('should add signature to petition', function(done){
      return newPetition(function(petitionId){
        return ask.sign(petitionId, function(error){
          return firebase.child('petition_meta').child(petitionId).child('signatures/1').once('value', function(snapshot){
            assert(snapshot.val());
            return done();
          });
        });
      });
    });
    x$('should increase petition signatures count', function(done){
      return newPetition(function(petitionId){
        return ask.sign(petitionId, function(error){
          return firebase.child('petitions').child(petitionId).once('value', function(snapshot){
            assert.equal(snapshot.val().signatures, 1);
            return done();
          });
        });
      });
    });
    x$('should add petition to passed when over threshold', function(done){
      return newPetition(function(petitionId){
        return firebase.child('petitions').child(petitionId).child('signatures').set(999, function(error){
          return ask.sign(petitionId, function(error){
            return firebase.child('petition_index/passed').child(petitionId).once('value', function(snapshot){
              assert(snapshot.val());
              return done();
            });
          });
        });
      });
    });
    x$('should add passed status to petition when over threshold', function(done){
      return newPetition(function(petitionId){
        return firebase.child('petitions').child(petitionId).child('signatures').set(999, function(error){
          return ask.sign(petitionId, function(error){
            return firebase.child('petitions').child(petitionId).once('value', function(snapshot){
              assert(snapshot.val().status.passed);
              return done();
            });
          });
        });
      });
    });
    return x$;
  });
});